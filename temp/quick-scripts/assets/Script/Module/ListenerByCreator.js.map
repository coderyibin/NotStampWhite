{"version":3,"sources":["ListenerByCreator.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAmD,EAAlD,oBAAO,EAAE,sBAAQ,EAAE,kCAAc,CAAkB;AAI1D;IAFA;QAGY,kBAAa,GAAG,EAAE,CAAC;IAkD/B,CAAC;iBAnDoB,QAAQ;IAGzB,MAAM;IACN,iCAAc,GAAd,UAAgB,IAAc,EAAE,SAAkB,EAAE,QAAmB;QACnE,IAAI,KAAK,GAAS,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACjE,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAA,SAAS;IACnC,CAAC;IAED,QAAQ;IACR,oCAAiB,GAAjB,UAAmB,IAAc,EAAE,SAAkB,EAAE,QAAmB;QACtE,IAAI,KAAK,GAAS,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACjE,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAA,SAAS;IAClC,CAAC;IAED,SAAS;IACT,iCAAc,GAAd,UAAgB,SAAkB;QAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAC/B,IAAI,KAAK,GAAS,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,mBAAmB,IAAI,KAAK,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC,CAAC;oBAC3G,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;oBACnC,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,MAAM;IACE,iCAAc,GAAtB,UAAwB,IAAc,EAAE,SAAkB,EAAE,QAAmB;QAC3E,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK;YACrB,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,CAAE,KAAK,CAAC;YAAC,KAAK,GAAG,EAAE,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACvB,KAAK,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;QAC1B,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAIa,oBAAW,GAAzB;QACI,EAAE,CAAC,CAAC,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,UAAQ,EAAE,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAlDgB,QAAQ;QAF5B,OAAO;QACP,cAAc,CAAC,CAAC,CAAC;OACG,QAAQ,CAmD5B;IAAD,eAAC;;CAnDD,AAmDC,IAAA;kBAnDoB,QAAQ","file":"","sourceRoot":"../../../../../assets/Script/Module","sourcesContent":["const {ccclass, property, executionOrder} = cc._decorator;\n\n@ccclass\n@executionOrder(0)\nexport default class Listener {\n    private _listenerList = {};\n\n    //注册事件\n    registerEvents (node : cc.Node, EventName : string, callBack : Function) : void {\n        let oData : any = this._registerEvent(node, EventName, callBack);\n        oData[\"once\"] = false;//是否是单次事件\n    }\n\n    //注册单次事件\n    registerOnceEvent (node : cc.Node, EventName : string, callBack : Function) : void {\n        let oData : any = this._registerEvent(node, EventName, callBack);\n        oData[\"once\"] = true;//是否是单次事件\n    }\n\n    //移除指定的事件\n    removeListener (EventName : string) : boolean {\n        for (let i in this._listenerList) {\n            let oData : any = this._listenerList[i];\n            if (oData.name == EventName) {\n                if (oData && Object.prototype.toString.call(oData.cb) == \"[Object Function]\" || oData.cb instanceof Function) {\n                    oData.node.un(EventName, oData.cb);\n                    delete this._listenerList[i];\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    \n    //注册事件\n    private _registerEvent (node : cc.Node, EventName : string, callBack : Function) : any {\n        node.on(EventName, (event) => {\n            callBack(event);\n        });\n        let oData = this._listenerList[EventName];\n        if (! oData) oData = {};\n        oData[\"cb\"] = callBack;\n        oData[\"name\"] = EventName;\n        oData[\"node\"] = node;\n        return oData;\n    }\n\n\n    private static _listener : Listener;\n    public static getInstance () : Listener {\n        if (! this._listener) {\n            return new Listener();\n        }\n        return this._listener;\n    }\n}"]}
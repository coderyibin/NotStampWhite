{"version":3,"sources":["resource.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import { Common } from \"./Module/Common\";\n\nexport enum RES_TYPE {\n    GLOBAL,//全局资源\n    SINGLE,//单个资源\n    MODULE,//模块资源\n}\n\n/**\n * 资源操作的脚本\n */\n export class RES {\n    //资源数据\n    static Res = {\n        \"global\" : {}\n    };\n     \n    //加载资源数组\n    static loadArray (file : Array<string>, progress : Function, cb ?: Function) : void {\n        cc.loader.loadResArray(file, (Count: number, total: number, item: any) => {\n            progress.call(Count, total, item);\n        }, (err: Error, res: any[]) => {\n            if (err)  {\n                cc.warn(\"res error!\");\n                return;\n            }\n            if (cb) cb.call(res);\n        });\n    }\n\n    static loadJson (file : string, cb ?: Function) : void {\n        cc.loader.loadRes(file, (err, res) => {\n            if (err) {\n                cc.warn(file, \"json资源读取出错\");\n                return;\n            }\n            if (cb) cb(res);\n        });\n    }\n\n    //获取json数据的长度\n    static getJsonLength (json : any) : number {\n        if (! json || ! (json instanceof Object)) return;\n        let len : number= 0;\n        for (let i in json) {\n            len ++;\n        }\n        return len;\n    }\n\n    static loadRes (file : string, cb ?: Function, target ?: any) : void {\n        let sName : string = cc.director.getScene().name;\n        let func : Function = (res, target) => {\n            let fileName = Common.fGetFileName(file);\n            //场景名称-文件名称\n            if (! RES.Res[sName]) {\n                RES.Res[sName] = {};\n            }\n            RES.Res[sName][fileName] = res;\n            cb(res, target);\n        };\n        RES._loadRes(file, func, target);\n    }\n\n    static loadResToGlobal (file : string, cb ?: Function, target ?: any) : void {\n        let sName : string = cc.director.getScene().name;\n        let func : Function = (res, target) => {\n            //场景名称-文件名称\n            RES.Res[\"global\"][file] = res;\n            cb(res, target);\n        };\n        RES._loadRes(file, func, target);\n    }\n\n    static _loadRes (file : string, cb : Function, target : any) : void {\n        cc.loader.loadRes(file, (err, res) => {//res 图片的话为texture2d对象\n            if (err) {\n                cc.warn(res, \"图片资源读取出错\");\n                return;\n            }\n            if (res instanceof cc.Texture2D) {\n                let frame : cc.SpriteFrame = new cc.SpriteFrame();\n                frame.setTexture(res);\n                res = frame;\n            }\n            cb(res, target);\n        });\n    }\n\n    /**\n     * 获取资源\n     * @param file 资源名称 \n     */\n    static fGetRes (file : string) : any {\n        let g_Arr = RES.Res.global\n        for (let i in g_Arr) {//优先遍历全局资源\n            if (file == i) {\n                let res = g_Arr[i];\n                return res instanceof cc.Prefab ? cc.instantiate(res) : res;\n            }\n        }\n        let sName : string = cc.director.getScene().name;\n        let arr = RES.Res[sName];\n        for (let i in arr) {//遍历场景资源\n            if (file == i) {\n                let res = arr[i];\n                return res instanceof cc.Prefab ? cc.instantiate(res.data) : res;\n            }\n        }\n        cc.warn(\"未找到该资源\", file);\n        return null;\n    }\n\n    /**\n     * 释放资源\n     * @param type 资源类型\n     * @param resName 资源名称--如果类型为模块资源，则resName默认为场景名称\n     */\n    static fReleaseRes (type : RES_TYPE, resName ?: string) : void {\n        if (type == RES_TYPE.SINGLE) {\n            \n        } else if (type == RES_TYPE.MODULE) {\n            if (! resName) {\n                let scene = cc.director.getScene()\n                let sName : string = scene.name;\n                let list = RES.Res[sName];\n                for (let i in list) {\n                    cc.loader.release(list[i]);\n                }\n            }\n        } else {\n            \n        }\n    }\n };\n\n /**\n  * 资源的管理\n  * 在控制台可以用 cc.RES.Res 这个来查看当前内存的资源情况方便调试\n  */\n cc[\"RES\"] = RES;"]}